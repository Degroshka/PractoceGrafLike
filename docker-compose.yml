version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: ${BUILD_TARGET:-final}
    ports:
      - "8056:80"
    volumes:
      - ./:/var/www/html
      - ./storage/logs:/var/www/html/storage/logs
      - ./storage/cache:/var/www/html/storage/cache
      - composer-cache:/root/.composer/cache
    depends_on:
      mysql:
        condition: service_healthy
      postgres:
        condition: service_healthy
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
      - DB_CONNECTION=mysql
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_DATABASE=grafana_clone
      - DB_USERNAME=root
      - DB_PASSWORD=secret
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=grafana_clone
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=secret
    networks:
      - app-network

  mysql:
    image: mysql:8.0
    ports:
      - "3307:3306"
    environment:
      - MYSQL_DATABASE=grafana_clone
      - MYSQL_ROOT_PASSWORD=secret
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-psecret"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  postgres:
    image: postgres:14
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_DB=grafana_clone
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=secret
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mysql_data:
  postgres_data:
  composer-cache: 